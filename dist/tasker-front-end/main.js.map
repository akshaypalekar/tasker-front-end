{"version":3,"sources":["./src/app/services/spinner-service/spinner-service.service.ts","./src/app/pipes/task-complete-pipe/task-complete-pipe.pipe.ts","./src/app/components/sidebar/list-menu/list-menu/list-menu.component.ts","./src/app/components/sidebar/list-menu/list-menu/list-menu.component.html","./src/environments/environment.ts","./src/app/pipes/dialog-list-pipe/dialog-list-pipe.pipe.ts","./src/app/services/moveable-service/moveable-service.service.ts","./src/app/components/main-container/task-list/task-list.component.ts","./src/app/components/main-container/task-list/task-list.component.html","./src/app/components/main-container/report-dashboard/report-dashboard.component.ts","./src/app/components/main-container/report-dashboard/report-dashboard.component.html","./src/app/components/sidebar/create-list/create-list-button/create-list-button.component.ts","./src/app/components/sidebar/create-list/create-list-button/create-list-button.component.html","./src/app/dialog/task-delete-dialog/task-delete-dialog.component.ts","./src/app/dialog/task-delete-dialog/task-delete-dialog.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/resolvers/report-resolver/report-resolver.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/http-service/http-service.service.ts","./src/app/guards/authguard/auth.guard.ts","./src/app/navigation/headnav-sidenav/headnav-sidenav.component.ts","./src/app/navigation/headnav-sidenav/headnav-sidenav.component.html","./src/app/app.module.ts","./src/app/services/auth-service/auth-service.service.ts","./src/app/resolvers/list-menu-resolver/list-menu-resolver.service.ts","./src/app/resolvers/task-list-resolver/task-list-resolver.service.ts","./src/app/components/main-container/archive-list/archive-list.component.ts","./src/app/components/main-container/archive-list/archive-list.component.html","./src/app/services/list-service/list-service.service.ts","./src/app/components/spinner/spinner.component.ts","./src/app/components/spinner/spinner.component.html","./src/app/dialog/list-edit-dialog/list-edit-dialog.component.ts","./src/app/dialog/list-edit-dialog/list-edit-dialog.component.html","./src/app/models/list-model/list.model.ts","./src/app/dialog/list-create-dialog/list-create-dialog.component.ts","./src/app/dialog/list-create-dialog/list-create-dialog.component.html","./src/app/components/main-container/page-not-found-container/page-not-found-container.component.ts","./src/app/components/main-container/page-not-found-container/page-not-found-container.component.html","./src/app/confirm/confirm.component.ts","./src/app/confirm/confirm.component.html","./src/app/guards/confirmguard/confirm.guard.ts","./src/app/interceptors/request-interceptor/request-interceptor.ts","./src/app/services/task-service/task-service.service.ts","./src/app/dialog/task-edit-dialog/task-edit-dialog.component.ts","./src/app/dialog/task-edit-dialog/task-edit-dialog.component.html","./src/app/components/main-container/wrapper-container/wrapper-container.component.ts","./src/app/components/main-container/wrapper-container/wrapper-container.component.html","./src/app/components/main-container/empty-container/empty-container.component.ts","./src/app/components/main-container/empty-container/empty-container.component.html","./src/app/components/main-container/task-creat/task-creat.component.ts","./src/app/components/main-container/task-creat/task-creat.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/dialog/delete-confirmation-dialog/delete-confirmation-dialog.component.ts","./src/app/dialog/delete-confirmation-dialog/delete-confirmation-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerServiceService {\r\n  \r\n  spinner = new Subject<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  show() {\r\n    this.spinner.next(true);\r\n  }\r\n  hide() {\r\n    this.spinner.next(false);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Task } from 'src/app/models/task-model/task.model';\r\n\r\n@Pipe({\r\n  name: 'taskCompletePipe',\r\n  pure: false\r\n})\r\nexport class TaskCompletePipePipe implements PipeTransform {\r\n\r\n  transform(value: Task[], complete: boolean): unknown {\r\n    if(complete){\r\n    return value.filter((task) => task.isComplete == true && task.isArchived == false);\r\n    }else{\r\n      return value.filter((task) => task.isComplete == false && task.isArchived == false);\r\n    }\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { List } from '../../../../models/list-model/list.model';\r\nimport { ListServiceService } from 'src/app/services/list-service/list-service.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ListEditDialogComponent } from 'src/app/dialog/list-edit-dialog/list-edit-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TaskServiceService } from '../../../../services/task-service/task-service.service';\r\nimport { ActivatedRoute, Router, RouterLinkActive } from '@angular/router';\r\nimport { ListCreateDialogComponent } from 'src/app/dialog/list-create-dialog/list-create-dialog.component';\r\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialog/delete-confirmation-dialog/delete-confirmation-dialog.component';\r\nimport { MoveableServiceService } from 'src/app/services/moveable-service/moveable-service.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-list-menu',\r\n  templateUrl: './list-menu.component.html',\r\n  styleUrls: ['./list-menu.component.css'],\r\n})\r\nexport class ListMenuComponent implements OnInit {\r\n  listMenu: List[] = []; //Local array to store the list items\r\n\r\n  constructor(\r\n    public listService: ListServiceService,\r\n    public taskService: TaskServiceService,\r\n    public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    public _moveable: MoveableServiceService,\r\n  ) { }\r\n\r\n  //Function to get any items when the component is created\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe((response) => {\r\n      this.listMenu = response.list.sort((a,b) => {\r\n        return moment(a.CreatedOn).diff(b.CreatedOn);\r\n      });\r\n    });\r\n  }\r\n\r\n  getList() {\r\n    this.listService.getlist().subscribe((response) => {\r\n      this.listMenu = response;\r\n    });\r\n  }\r\n\r\n  //Create a list item dialog\r\n  openCreateListDialog(): void {\r\n    const dialogRef = this.dialog.open(ListCreateDialogComponent, {\r\n      width: '250',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((ListName) => {\r\n      if (ListName != undefined) {\r\n        this.listService.addItem(ListName).subscribe((response: any) => {\r\n          const list: List = {\r\n            ...response,\r\n          };\r\n          this.listMenu.push(list);\r\n          this.router.navigate(['/list', list.ItemID]);\r\n          this.openSnackBar('New List Added', 'Dismiss');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //Edit a list dialog\r\n  openListEditDialog(listItem: any): void {\r\n    const dialogRef = this.dialog.open(ListEditDialogComponent, {\r\n      width: '300px',\r\n      data: {\r\n        ...listItem,\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result != undefined || result == '' || result == listItem.ListName) {\r\n        this.listService.editList(listItem, result).subscribe((response: List) => {\r\n          this.listMenu.map((list) => {\r\n            if (list.ItemID == response.ItemID) {\r\n              list.ListName = response.ListName;\r\n            }\r\n          });\r\n          this.openSnackBar('List Edited', 'Dismiss');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //Delete a list Dialog\r\n  openDeleteDialog(ListItem: any): void {\r\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\r\n      width: '400px',\r\n      data: {\r\n        element: 'list',\r\n        ListName: ListItem.ListName,\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == true) {\r\n        this.listService.deleteList(ListItem.ItemID).subscribe((response: string) => {\r\n          this.listMenu = this.listMenu.filter((item) => item.ItemID != ListItem.ItemID);\r\n          if (this.listMenu.length == 0) {\r\n            this.router.navigate(['']);\r\n          } else {\r\n            this.router.navigate(['/list', this.listMenu[0].ItemID]);\r\n          }\r\n          this.getList();\r\n          this.openSnackBar(response, 'Dismiss');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //Logic for drag and drop of list items\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    console.log(\r\n      'P_Index: ' + event.previousIndex + ' C_Index:' + event.currentIndex\r\n    );\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <button mat-raised-button color=\"primary\" class=\"new-list-button\" (click)=\"openCreateListDialog()\">\r\n    <mat-icon>add</mat-icon> New List\r\n  </button>\r\n\r\n  <div *ngIf=\"listMenu.length == 0\" class=\"empty-list\">\r\n    <img src=\"../../../../../assets/images/empty_list.svg\">\r\n    <p> Create a new list to get started !!!</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"listMenu.length != 0\" cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div *ngFor=\"let list of listMenu\" [routerLink]=\"['/list',list.ItemID]\" routerLinkActive #rla=\"routerLinkActive\" [ngClass]=\"rla.isActive ? 'example-box-active' : 'example-box'\" cdkDrag>\r\n      <div class=\"list-text\">\r\n        <span class=\"list-name-span\">{{list.ListName}}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n          <button mat-menu-item (click)=\"openListEditDialog(list)\">\r\n            <mat-icon>edit</mat-icon>\r\n            <span>Edit</span>\r\n          </button>\r\n          <button mat-menu-item (click)=\"openDeleteDialog(list)\">\r\n            <mat-icon>delete</mat-icon>\r\n            <span>Delete</span>\r\n          </button>\r\n        </mat-menu>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <mat-nav-list>\r\n    <a mat-list-item routerLink=\"/\"><span class=\"material-icons nav\">dashboard</span>Dashboard</a>\r\n    <a mat-list-item routerLink=\"/archive\"><span class=\"material-icons nav\">archive</span>Archive</a>\r\n </mat-nav-list>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  name: \"DEV\",\r\n  endpoint: \"https://vaf8rc22r6.execute-api.us-east-1.amazonaws.com/Prod/\",\r\n  api_endpoint: 'https://tddowj8otk.execute-api.us-east-1.amazonaws.com/dev/items',\r\n  sso_endpoint: 'https://taskerdomain.auth.us-east-1.amazoncognito.com',\r\n  clientId: '19ul0dh7n2d7mdfdf5m6tnds9o',\r\n  region: 'us-east-1',\r\n  userpoolId: 'us-east-1_FBce5QEQc'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { List } from 'src/app/models/list-model/list.model';\r\n\r\n@Pipe({\r\n  name: 'dialogListPipe'\r\n})\r\nexport class DialogListPipePipe implements PipeTransform {\r\n\r\n  transform(value: List[], listId: string): unknown {\r\n    console.log(listId);\r\n    return value.filter((list) => list.ItemID != listId);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { List } from 'src/app/models/list-model/list.model';\r\nimport { Task } from 'src/app/models/task-model/task.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpServiceService } from '../http-service/http-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MoveableServiceService {\r\n\r\n  constructor(private http: HttpClient,\r\n    public httpService: HttpServiceService) { }\r\n\r\n  moveList(ListID: string, currentIndex: number, previousIndex: number){\r\n    const item = {\r\n      ListID: ListID,\r\n      currentIndex: currentIndex,\r\n      previousIndex: previousIndex\r\n    }\r\n    return this.http.post<List[]>(environment.endpoint + 'listmover',JSON.stringify(item));\r\n  }\r\n\r\n  moveTask(TaskID: string, ListID: string, currentIndex: number, previousIndex: number){\r\n    const item = {\r\n      TaskID: TaskID,\r\n      ListID: ListID,\r\n      currentIndex: currentIndex,\r\n      previousIndex: previousIndex\r\n    }\r\n    return this.http.post<Task[]>(environment.endpoint + 'taskmover',JSON.stringify(item));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Task } from '../../../models/task-model/task.model';\r\nimport { TaskServiceService } from '../../../services/task-service/task-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TaskDeleteDialogComponent } from 'src/app/dialog/task-delete-dialog/task-delete-dialog.component';\r\nimport { TaskEditDialogComponent } from 'src/app/dialog/task-edit-dialog/task-edit-dialog.component';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { MoveableServiceService } from 'src/app/services/moveable-service/moveable-service.service';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css'],\r\n})\r\nexport class TaskListComponent {\r\n  taskList: Task[] = [];\r\n  completedTaskList: Task[] = [];\r\n  selectedListId: string;\r\n\r\n  public taskCompleteClass: string;\r\n  public boxClass = 'row example-box';\r\n\r\n  constructor(\r\n    public taskService: TaskServiceService,\r\n    private activatedRoute: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,\r\n    public _moveable: MoveableServiceService\r\n  ) {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.selectedListId = params.get('id');\r\n      this.getTasks();\r\n    });\r\n  }\r\n\r\n  getTasks(): void {\r\n    this.taskService.getTaskList(this.selectedListId).subscribe((response) => {\r\n      this.taskList = response.map((item: Task) => {\r\n        return {\r\n          ...item,\r\n        };\r\n      }).sort((a,b) => {\r\n        return moment(a.CreatedOn).diff(b.CreatedOn);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Create task form\r\n  createTask(form: NgForm): void {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.taskService.addTask(form.value.taskInputField, this.selectedListId).subscribe((response: any) => {\r\n      const task: Task = {\r\n        ...response,\r\n      };\r\n      this.taskList.push(task);\r\n    },\r\n      (error) => {\r\n        console.log('Task not created: ' + JSON.stringify(error));\r\n      }\r\n    );\r\n    form.resetForm();\r\n  }\r\n\r\n  //Delete Dialog\r\n  openDeleteModal(item: Task): void {\r\n    const dialogRef = this.dialog.open(TaskDeleteDialogComponent, {\r\n      width: '350px',\r\n      data: {\r\n        element: 'task',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == true) {\r\n        this.taskService.deleteTask(item).subscribe((response: any) => {\r\n          console.log(response);\r\n          if (response == 'task deleted successfully') {\r\n            this.taskList = this.taskList.filter((task) => task.ItemID != item.ItemID);\r\n            this.openSnackBar('Task Deleted', 'Dismiss');\r\n          }\r\n        },\r\n          (error) => {\r\n            console.log('Task not deleted: ' + JSON.stringify(error));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //Edit Dialog\r\n  openEditModal(task: any): void {\r\n    const dialogRef = this.dialog.open(TaskEditDialogComponent, {\r\n      width: '350px',\r\n      data: {\r\n        ...task,\r\n        TaskUpdatedDT: moment(),\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result != undefined) {\r\n        this.taskService.editTask(result).subscribe((response: Task) => {\r\n          this.taskList = this.taskService.updateTask(this.taskList, task, response);\r\n          this.openSnackBar('Task Updated', 'Dismiss');\r\n        },\r\n          (error) => {\r\n            console.log('Task not updated: ' + JSON.stringify(error));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //Edit task to update it make isComplete flag true\r\n  onCompleteCheck(task: Task): void {\r\n    task.isComplete = true;\r\n    this.taskService.editTask(task).subscribe((response: Task) => {\r\n      this.taskList = this.taskService.updateTask(this.taskList, task, response);\r\n      this.openSnackBar('Task Completed', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  //Push tasks in the active list\r\n  restoreTask(task: Task): void {\r\n    task.isComplete = false;\r\n    task.TaskStatus = 'Ready';\r\n    task.TaskPriority = 'Medium';\r\n    this.taskService.editTask(task).subscribe((response: Task) => {\r\n      this.taskList = this.taskService.updateTask(this.taskList, task, response);\r\n      this.openSnackBar('Task Restored', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  archiveTask(task: any): void {\r\n    task.isArchived = true;\r\n    this.taskService.editTask(task).subscribe((response: Task) => {\r\n      this.taskList = this.taskService.updateTask(this.taskList, task, response);\r\n      this.openSnackBar('Task Archived', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  getMomentFormat(TaskDueDate: any): string {\r\n    return moment(TaskDueDate).format('MMM Do YYYY');\r\n  }\r\n\r\n  getBorderColor(priority: string): string {\r\n    if (priority == 'Low') {\r\n      return 'solid 5px #3c78d8';\r\n    }\r\n    if (priority == 'Medium') {\r\n      return 'solid 5px #6aa84f';\r\n    }\r\n    if (priority == 'High') {\r\n      return 'solid 5px #e69138';\r\n    }\r\n    if (priority == 'Critical') {\r\n      return 'solid 5px #cc0000';\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  //Logic for drag and drop of task items\r\n  drop(event: CdkDragDrop<string[]>) {\r\n\r\n  }\r\n}\r\n","<!-- Task Submit Component -->\r\n<div class=\"container-fluid\">\r\n    <form (submit)=\"createTask(taskForm)\" #taskForm=\"ngForm\">\r\n        <div class=\"form-row align-items-center\">\r\n            <div class=\"col-xs-12 col-lg-11\">\r\n                <input type=\"text\" maxlength=\"100\" class=\"form-control mb-2\" id=\"inlineFormInput\"\r\n                    placeholder=\"Whats up ?\" ngModel name=\"taskInputField\" #taskField=\"ngModel\" required>\r\n            </div>\r\n            <div class=\"col-xs-12 col-lg-1\">\r\n                <button mat-raised-button color=\"primary\" class=\"btn btn-primary mb-2\">Add Task</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<!-- Task List Component -->\r\n<mat-card *ngIf=\"taskList.length == 0 && completedTaskList.length == 0\">\r\n    <img src=\"../../../../assets/images/girl_with_generic_task_list_themed.svg\">\r\n</mat-card>\r\n\r\n<div *ngIf=\"taskList.length != 0\" class=\"container example-list row-heading\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-7 col-md-7 col-xs-12 col-12 task-header\">Task</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 row-header\">Status</div>\r\n        <div class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 col-4 row-header\">Due Date</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 row-header\">Priority</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-2 col-xs-2 col-2 row-header\">Actions</div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"taskList.length != 0\" cdkDropList class=\"container example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div *ngFor=\"let task of taskList | taskCompletePipe:false\" ngClass=\"row example-box\"\r\n        [ngStyle]=\"{'border-left': getBorderColor(task.TaskPriority)}\">\r\n        <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\r\n\r\n        <div class=\"col-lg-7 col-md-7 col-xs-12 col-12 task-text-box\">\r\n            <mat-checkbox class=\"example-margin\" color=\"primary\" [checked]=\"task.isComplete\"\r\n                (change)=\"onCompleteCheck(task)\"></mat-checkbox>\r\n            <span class=\"task-text-span\">{{task.TaskTitle}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"task.TaskStatus == 'Ready'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\"\r\n            style=\"background-color: #dfa800;\">Ready</div>\r\n        <div *ngIf=\"task.TaskStatus == 'In Progress'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\"\r\n            style=\"background-color: #1155cc;\">In Progress</div>\r\n        <div *ngIf=\"task.TaskStatus == 'Done'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\"\r\n            style=\"background-color: #38761d;\">Done</div>\r\n        <div *ngIf=\"task.TaskStatus == 'Stuck'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\"\r\n            style=\"background-color: #990000;\">Stuck</div>\r\n        <div *ngIf=\"task.TaskStatus == 'Hold'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\"\r\n            style=\"background-color: #741b47;\">On Hold</div>\r\n\r\n        <div class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 col-4 due-date-box\">\r\n            <span matTooltip=\"Due Date\" class=\"dueDate\">{{getMomentFormat(task.TaskDueDT)}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"task.TaskPriority == 'Low'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\"\r\n            style=\"background-color: #3c78d8;\">Low</div>\r\n        <div *ngIf=\"task.TaskPriority == 'Medium'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\"\r\n            style=\"background-color:#6aa84f;\">Medium</div>\r\n        <div *ngIf=\"task.TaskPriority == 'High'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\"\r\n            style=\"background-color: #e77f11;\">High</div>\r\n        <div *ngIf=\"task.TaskPriority == 'Critical'\" class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\"\r\n            style=\"background-color: #cc0000;\">Critical</div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-2 col-xs-2 col-2 action-box\">\r\n            <span matTooltip=\"Edit\" class=\"material-icons edit\" (click)=\"openEditModal(task)\">edit</span>\r\n            <span matTooltip=\"Delete\" class=\"material-icons delete\" (click)=\"openDeleteModal(task)\">delete</span>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n<br>\r\n\r\n<div *ngIf=\"taskList.length != 0\" cdkDropList class=\"container example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div *ngFor=\"let task of taskList | taskCompletePipe:true\" ngClass=\"row example-box\">\r\n        <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\r\n\r\n        <div class=\"col-lg-7 col-md-7 col-xs-12 col-12 task-text-box\">\r\n            <mat-checkbox class=\"example-margin\" color=\"primary\" [checked]=\"task.isComplete\" (change)=\"restoreTask(task)\"></mat-checkbox>\r\n            <span class=\"task-text-span task-complete-class\">{{task.TaskTitle}}</span>\r\n        </div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\" style=\"background-color: #808080;\">{{task.TaskStatus}}</div>\r\n\r\n        <div class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 col-4 due-date-box\">\r\n            <span matTooltip=\"Due Date\" class=\"dueDate\">{{getMomentFormat(task.TaskDueDT)}}</span>\r\n        </div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\" style=\"background-color: #808080;\">{{task.TaskPriority}}</div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-2 col-xs-2 col-2 action-box\">\r\n            <span matTooltip=\"Archive\" class=\"material-icons archive\" (click)=\"archiveTask(task)\">archive</span>\r\n            <span matTooltip=\"Delete\" class=\"material-icons delete\" (click)=\"openDeleteModal(task)\">delete</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CalendarOptions, FullCalendarComponent } from '@fullcalendar/angular';\r\nimport * as moment from 'moment';\r\nimport { Chart } from 'node_modules/chart.js';\r\n\r\n@Component({\r\n  selector: 'app-report-dashboard',\r\n  templateUrl: './report-dashboard.component.html',\r\n  styleUrls: ['./report-dashboard.component.css'],\r\n})\r\nexport class ReportDashboardComponent implements OnInit {\r\n  calendarData = [];\r\n  dashboardData = [];\r\n\r\n  colorMap = {\r\n    \"Critical\": \"#cc0000\",\r\n    \"High\": \"#e69138\",\r\n    \"Medium\": \"#6aa84f\",\r\n    \"Low\": \"#3c78d8\"\r\n  }\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) { }\r\n\r\n  calendarOptions: CalendarOptions;\r\n  @ViewChild('fullcalendar') fullcalendar: FullCalendarComponent;\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((response) => {\r\n      console.log(response);\r\n      if (Object.keys(response).length != 0) {\r\n        this.calendarData = response.task.map((data) => {\r\n          return {\r\n            title: data.TaskTitle,\r\n            date: moment(data.TaskDueDT).format('YYYY-MM-DD'),\r\n            description: data.TaskDescription,\r\n            color: this.colorMap[data.TaskPriority]\r\n          };\r\n        }\r\n        );\r\n\r\n        this.dashboardData = response.task.map((data) => {\r\n          return {\r\n            ...data,\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    //Calendar\r\n    this.calendarOptions = {\r\n      initialView: 'dayGridMonth',\r\n      events: this.calendarData,\r\n    };\r\n\r\n    //Priority Chart\r\n    const priorityChart = new Chart('priorityChart', {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: ['Critical', 'High', 'Medium', 'Low'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [\r\n              this.dashboardData.filter((el) => el.TaskPriority == 'Critical')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskPriority == 'High')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskPriority == 'Medium')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskPriority == 'Low')\r\n                .length,\r\n            ],\r\n            backgroundColor: [\r\n              'rgba(204, 0, 0, 0.6)',\r\n              'rgba(231, 127, 17, 0.6)',\r\n              'rgba(106, 168, 79, 0.6)',\r\n              'rgba(60, 12, 216, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(204, 0, 0, 1)',\r\n              'rgba(231, 127, 17, 1)',\r\n              'rgba(106, 168, 79, 1)',\r\n              'rgba(60, 12, 216, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {},\r\n    });\r\n\r\n    //Productivity chart\r\n    const productivityChart = new Chart('productivityChart', {\r\n      type: 'pie',\r\n      data: {\r\n        labels: ['Ready', 'In Progress', 'Done', 'Stuck', 'On Hold'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [\r\n              this.dashboardData.filter((el) => el.TaskStatus == 'Ready')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskStatus == 'In Progress')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskStatus == 'Done').length,\r\n              this.dashboardData.filter((el) => el.TaskStatus == 'Stuck')\r\n                .length,\r\n              this.dashboardData.filter((el) => el.TaskStatus == 'On Hold')\r\n                .length,\r\n            ],\r\n            backgroundColor: [\r\n              'rgba(223, 168, 0, 0.6)',\r\n              'rgba(7, 85, 204, 0.6)',\r\n              'rgba(56, 118, 29, 0.6)',\r\n              'rgba(153, 0, 0, 0.6)',\r\n              'rgba(116, 27, 71, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(223, 168, 0, 1)',\r\n              'rgba(7, 85, 204, 1)',\r\n              'rgba(56, 118, 29, 1)',\r\n              'rgba(153, 0, 0, 1)',\r\n              'rgba(116, 27, 71, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {},\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-container\">\r\n  <mat-grid-list cols=\"2\" rowHeight=\"430px\">\r\n\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div><full-calendar #fullcalendar [options]=\"calendarOptions\"></full-calendar></div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            Priority\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div class=\"charts\"><canvas id=\"priorityChart\"></canvas></div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            Productivity\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div class=\"charts\"><canvas id=\"productivityChart\"></canvas></div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n\r\n  </mat-grid-list>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ListCreateDialogComponent } from '../../../../dialog/list-create-dialog/list-create-dialog.component';\r\nimport { ListServiceService } from 'src/app/services/list-service/list-service.service';\r\n\r\n@Component({\r\n  selector: 'app-create-list-button',\r\n  templateUrl: './create-list-button.component.html',\r\n  styleUrls: ['./create-list-button.component.css']\r\n})\r\nexport class CreateListButtonComponent implements OnInit {\r\n\r\n  listName: string;\r\n\r\n  constructor(public dialog: MatDialog, public listService: ListServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openCreateListDialog(): void {\r\n    const dialogRef = this.dialog.open(ListCreateDialogComponent, {\r\n      width: '250'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (typeof result != undefined) {\r\n        if (result.toString().trim().length > 0) {\r\n          //this.listService.addNewListToMenu(result);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<button mat-raised-button color=\"primary\" (click)=\"openCreateListDialog()\">\r\n    Create New List<mat-icon>add</mat-icon>\r\n</button>","import { Component, OnInit, Inject  } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-task-delete-dialog',\r\n  templateUrl: './task-delete-dialog.component.html',\r\n  styleUrls: ['./task-delete-dialog.component.css']\r\n})\r\nexport class TaskDeleteDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TaskDeleteDialogComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Confirm Delete</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <h3 *ngIf=\"data.element == 'task'\">Are you sure you want to delete this task ?</h3>\r\n    <h3 *ngIf=\"data.element == 'list'\">Are you sure you want to delete this list ? </h3>\r\n    <p *ngIf=\"data.element == 'list'\">Carefull !! Deleting this list will delete all tasks in this list</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n    <button mat-raised-button mat-dialog-close>Cancel</button>\r\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">Delete</button>\r\n</mat-dialog-actions>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Task } from 'src/app/models/task-model/task.model';\r\nimport { HttpServiceService } from 'src/app/services/http-service/http-service.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportResolverService implements Resolve<any> {\r\n\r\n  constructor(private http: HttpClient, public httpService: HttpServiceService, private activatedRoute: ActivatedRoute) { }\r\n  \r\n   resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Task[]> {\r\n    \r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'task');\r\n    params = params.append('archiveFlag', 'false');\r\n    \r\n    return this.http.get<Task[]>(environment.api_endpoint, {params: params});\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  envName = environment.name;\r\n  title = 'tasker-front-end';\r\n}\r\n","<!-- <app-login></app-login>\r\n<app-headnav-sidenav></app-headnav-sidenav> -->\r\n\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\nimport { List } from 'src/app/models/list-model/list.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpServiceService {\r\n  getList: any = {};\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Send POST request to API Gateway\r\n  sendPostRequest(resource: string, data: any): Observable<object> {\r\n    return this.http\r\n      .post(environment.endpoint + resource, JSON.stringify(data))\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //Send GET request to API Gateway\r\n  sendGetRequest(resource: string) {\r\n    this.http.get(environment.endpoint + resource).subscribe(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (error) => {\r\n        catchError(this.handleError);\r\n      }\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router){}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if(localStorage.getItem('userID')){\n      return true;\n    }else{\n      this.router.navigate(['login']);\n    }\n  }\n  \n}\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AuthServiceService } from '../../services/auth-service/auth-service.service';\r\n\r\n@Component({\r\n  selector: 'app-headnav-sidenav',\r\n  templateUrl: './headnav-sidenav.component.html',\r\n  styleUrls: ['./headnav-sidenav.component.css']\r\n})\r\nexport class HeadnavSidenavComponent {\r\n\r\n  showSpinner = true;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthServiceService) {}\r\n\r\n  onSignOut(){\r\n    this.authService.signOut();\r\n  }\r\n\r\n}\r\n","<div class=\"example-container\">\r\n    <mat-toolbar color=\"primary\">\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\r\n            *ngIf=\"isHandset$ | async\">\r\n            <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <img routerLink=\"/\" src=\"../../../assets/images/tasker_logo_new.png\" width=\"140\" height=\"140\">\r\n        <span class=\"example-spacer\"></span>\r\n        <button type=\"button\" mat-icon-button (click)=\"onSignOut()\">Logout</button>\r\n    </mat-toolbar>\r\n\r\n    <mat-sidenav-container class=\"sidenav-container\">\r\n        <mat-sidenav #drawer class=\"sidenav\" [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n            [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\r\n            <!-- <app-create-list-button></app-create-list-button> -->\r\n            <mat-nav-list>\r\n                <!-- <app-list-menu></app-list-menu> -->\r\n                <router-outlet name=\"app-list-menu\"></router-outlet>\r\n            </mat-nav-list>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content>\r\n            <app-spinner></app-spinner>\r\n            <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeadnavSidenavComponent } from './navigation/headnav-sidenav/headnav-sidenav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { CreateListButtonComponent } from './components/sidebar/create-list/create-list-button/create-list-button.component';\r\nimport { ListMenuComponent } from './components/sidebar/list-menu/list-menu/list-menu.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatDialogModule} from '@angular/material/dialog';\r\nimport { ListCreateDialogComponent } from './dialog/list-create-dialog/list-create-dialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TaskCreatComponent } from './components/main-container/task-creat/task-creat.component';\r\nimport { MatGridListModule} from '@angular/material/grid-list';\r\nimport { TaskListComponent } from './components/main-container/task-list/task-list.component';\r\nimport { EmptyContainerComponent } from './components/main-container/empty-container/empty-container.component';\r\nimport { MatCardModule} from '@angular/material/card';\r\nimport { WrapperContainerComponent } from './components/main-container/wrapper-container/wrapper-container.component';\r\nimport { TaskDeleteDialogComponent } from './dialog/task-delete-dialog/task-delete-dialog.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { ListEditDialogComponent } from './dialog/list-edit-dialog/list-edit-dialog.component';\r\nimport { TaskEditDialogComponent } from './dialog/task-edit-dialog/task-edit-dialog.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { PageNotFoundContainerComponent } from './components/main-container/page-not-found-container/page-not-found-container.component';\r\nimport { ReportDashboardComponent } from './components/main-container/report-dashboard/report-dashboard.component';\r\nimport { ListMenuResolverService } from './resolvers/list-menu-resolver/list-menu-resolver.service';\r\nimport { TaskListResolverService } from './resolvers/task-list-resolver/task-list-resolver.service';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { DeleteConfirmationDialogComponent } from './dialog/delete-confirmation-dialog/delete-confirmation-dialog.component';\r\nimport { SpinnerComponent } from './components/spinner/spinner.component';\r\nimport { TaskCompletePipePipe } from './pipes/task-complete-pipe/task-complete-pipe.pipe';\r\nimport { SpinnerServiceService } from './services/spinner-service/spinner-service.service';\r\nimport { RequestInterceptor } from './interceptors/request-interceptor/request-interceptor';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\nimport { FullCalendarModule } from '@fullcalendar/angular'; // the main connector. must go first\r\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { ArchiveListComponent } from './components/main-container/archive-list/archive-list.component';\r\nimport { DialogListPipePipe } from './pipes/dialog-list-pipe/dialog-list-pipe.pipe';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConfirmComponent } from './confirm/confirm.component'; // a plugin\r\nimport { AuthGuard } from './guards/authguard/auth.guard';\r\nimport { ConfirmGuard } from './guards/confirmguard/confirm.guard';\r\n\r\nFullCalendarModule.registerPlugins([ // register FullCalendar plugins\r\n  dayGridPlugin,\r\n  interactionPlugin\r\n]);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeadnavSidenavComponent,\r\n    CreateListButtonComponent,\r\n    ListMenuComponent,\r\n    ListCreateDialogComponent,\r\n    TaskCreatComponent,\r\n    TaskListComponent,\r\n    EmptyContainerComponent,\r\n    WrapperContainerComponent,\r\n    TaskDeleteDialogComponent,\r\n    ListEditDialogComponent,\r\n    TaskEditDialogComponent,\r\n    PageNotFoundContainerComponent,\r\n    ReportDashboardComponent,\r\n    DeleteConfirmationDialogComponent,\r\n    SpinnerComponent,\r\n    TaskCompletePipePipe,\r\n    ArchiveListComponent,\r\n    DialogListPipePipe,\r\n    LoginComponent,\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    DragDropModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    HttpClientModule,\r\n    MatProgressSpinnerModule,\r\n    FullCalendarModule,\r\n    MatTabsModule\r\n  ],\r\n  providers: [AuthGuard, ConfirmGuard, ListMenuResolverService, TaskListResolverService, SpinnerServiceService, { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport Amplify, { Auth, Cache } from 'aws-amplify';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    region: environment.region,\r\n    userPoolId: environment.userpoolId,\r\n    userPoolWebClientId: environment.clientId,\r\n  }\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async authenticateUser(username: string, password: string) {\r\n    return await Auth.signIn(username, password);\r\n  }\r\n\r\n  async getCurrentSession() {\r\n    return await Auth.currentSession();\r\n  }\r\n\r\n  async getCurrentUser() {\r\n    return await Auth.currentAuthenticatedUser();\r\n  }\r\n\r\n  async signOut() {\r\n    await Auth.signOut({ global: true }).then(() => {\r\n      localStorage.removeItem(\"userID\");\r\n      localStorage.removeItem(\"idToken\");\r\n      this.router.navigate(['login']);\r\n      console.log('signed out successfully');\r\n      location.reload();\r\n    }).catch((err) => {\r\n      console.log('error signing out: ', err);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { List } from 'src/app/models/list-model/list.model';\r\nimport { HttpServiceService } from 'src/app/services/http-service/http-service.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthServiceService } from '../../services/auth-service/auth-service.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ListMenuResolverService implements Resolve<any>{\r\n\r\n  constructor(private http: HttpClient, public httpService: HttpServiceService, public authService: AuthServiceService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) :Observable<List[]> {\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'list');\r\n    \r\n    return this.http.get<List[]>(environment.api_endpoint, {params: params});\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Task } from 'src/app/models/task-model/task.model';\r\nimport { HttpServiceService } from 'src/app/services/http-service/http-service.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskListResolverService implements Resolve<any> {\r\n\r\n  constructor(private http: HttpClient, public httpService: HttpServiceService, private activatedRoute: ActivatedRoute) { }\r\n  \r\n   resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Task[]> {\r\n    \r\n    let user = localStorage.getItem('userID');\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'task');\r\n    params = params.append('archiveFlag', 'true');\r\n    \r\n    return this.http.get<Task[]>(environment.api_endpoint, {params: params});\r\n  }\r\n\r\n\r\n  /*************Used for Archive List ****************************************/\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { Task } from 'src/app/models/task-model/task.model';\r\n\r\n@Component({\r\n  selector: 'app-archive-list',\r\n  templateUrl: './archive-list.component.html',\r\n  styleUrls: ['./archive-list.component.css']\r\n})\r\nexport class ArchiveListComponent implements OnInit {\r\n  archiveList: Task[] = [];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe((response) => {\r\n      this.archiveList = response.archivedtask\r\n    });\r\n  }\r\n\r\n  getMomentFormat(TaskDueDate: any): string {\r\n    return moment(TaskDueDate).format('MMM Do YY');\r\n  }\r\n\r\n}\r\n","<!-- Task List Component -->\r\n<mat-card *ngIf=\"archiveList.length == 0\">\r\n    <img src=\"../../../../assets/images/empty_archive_list.svg\">\r\n</mat-card>\r\n\r\n<div *ngIf=\"archiveList.length != 0\" class=\"container example-list row-heading\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-7 col-md-7 col-xs-12 col-12 task-header\">Task</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 row-header\">Status</div>\r\n        <div class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 col-4 row-header\">Due Date</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 row-header\">Priority</div>\r\n        <div class=\"col-lg-1 col-md-1 col-sm-2 col-xs-2 col-2 row-header\">Actions</div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"archiveList.length != 0\" cdkDropList class=\"container example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div *ngFor=\"let task of archiveList\" ngClass=\"row example-box\">\r\n        <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\r\n\r\n        <div class=\"col-lg-7 col-md-7 col-xs-12 col-12 task-text-box\">\r\n            <mat-checkbox class=\"example-margin\" color=\"primary\" [checked]=\"task.isComplete\" [disabled]=\"true\" (change)=\"onCompleteCheck(task)\"></mat-checkbox>\r\n            <span class=\"task-text-span\">{{task.TaskTitle}}</span>\r\n        </div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 status-box\" style=\"background-color: #808080;\">{{task.TaskStatus}}</div>\r\n\r\n        <div class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 col-4 due-date-box\">\r\n            <span matTooltip=\"Due Date\" class=\"dueDate\">{{getMomentFormat(task.TaskDueDT)}}</span>\r\n        </div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-3 col-xs-3 col-3 priority-box\" style=\"background-color: #808080;\">{{task.TaskPriority}}</div>\r\n\r\n        <div class=\"col-lg-1 col-md-1 col-sm-2 col-xs-2 col-2 action-box\">\r\n            <span>No Action</span>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { List } from '../../models/list-model/list.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { HttpServiceService } from '../http-service/http-service.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as moment from 'moment';\r\nimport { AuthServiceService} from '../auth-service/auth-service.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ListServiceService {\r\n  private list = new BehaviorSubject<List[]>([]);\r\n  user: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    public httpService: HttpServiceService,\r\n    private authService: AuthServiceService\r\n  ) {\r\n    \r\n      this.user = localStorage.getItem('userID');\r\n  }\r\n\r\n  getlist(): Observable<List[]> {\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'list');\r\n\r\n    return this.http.get<List[]>(environment.api_endpoint, {params: params});\r\n  }\r\n\r\n  //Add List Item\r\n  addItem(ListName: string): Observable<List[]> {\r\n    const item: List = {\r\n      ItemType: 'LIST',\r\n      ItemID: '',\r\n      ListName: ListName,\r\n      CreatedOn: moment(),\r\n      CreatedBy: this.user,\r\n      UpdatedOn: moment(),\r\n      UpdatedBy: this.user,\r\n    };\r\n\r\n    return this.http.post<List[]>(environment.api_endpoint, JSON.stringify(item));\r\n  }\r\n\r\n  //Edit List Item\r\n  editList(listItem: any, newName: string):Observable<List> {\r\n    const item: List = {\r\n      ItemType: 'LIST',\r\n      ItemID: listItem.ItemID,\r\n      ListName: newName,\r\n      CreatedOn: listItem.CreatedOn,\r\n      CreatedBy: this.user,\r\n      UpdatedOn: moment(),\r\n      UpdatedBy: this.user,\r\n    };\r\n\r\n    return this.http.put<List>(environment.api_endpoint, JSON.stringify(item));\r\n  }\r\n\r\n  //Delete a list\r\n  deleteList(ListID: string) {\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'list');\r\n    params = params.append('itemId', ListID);\r\n    return this.http.delete(environment.api_endpoint, {params: params});\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { SpinnerServiceService } from 'src/app/services/spinner-service/spinner-service.service';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  spinner: Subject<boolean> = this._spinner.spinner\r\n\r\n  constructor(private _spinner: SpinnerServiceService) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"overlay\" *ngIf=\"spinner | async\">\r\n  <div class=\"spinner\">\r\n    <div class=\"bounce1\"></div>\r\n    <div class=\"bounce2\"></div>\r\n    <div class=\"bounce3\"></div>\r\n  </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-list-edit-dialog',\r\n  templateUrl: './list-edit-dialog.component.html',\r\n  styleUrls: ['./list-edit-dialog.component.css']\r\n})\r\nexport class ListEditDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ListEditDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Rename List</h1>\r\n<div mat-dialog-content>\r\n    <p>What would you like to rename it to ?</p>\r\n    <mat-form-field appearance=\"outline\">\r\n        <input matInput maxlength=\"60\" matInput [(ngModel)]=\"data.ListName\">\r\n    </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions class=\"action-buttons\">\r\n    <button mat-raised-button (click)=\"onNoClick()\">Cancel</button>\r\n    <button mat-raised-button [disabled]=\"!data.ListName\"  [mat-dialog-close]=\"data.ListName\" color=\"primary\" cdkFocusInitial>Rename</button>\r\n</div>","export class List {\r\n    ItemType: string;\r\n    ItemID: string;\r\n    ListName: string;\r\n    CreatedOn: moment.Moment;\r\n    CreatedBy: string;\r\n    UpdatedOn: moment.Moment;\r\n    UpdatedBy: string\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { List } from '../../models/list-model/list.model';\r\n\r\n@Component({\r\n  selector: 'app-list-create-dialog',\r\n  templateUrl: './list-create-dialog.component.html',\r\n  styleUrls: ['./list-create-dialog.component.css']\r\n})\r\nexport class ListCreateDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ListCreateDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: List) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void{\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>New List Name</h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"outline\">\r\n        <input #listName cdkFocusInitial matInput placeholder=\"List Name\" maxlength=\"60\">\r\n    </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions class=\"action-buttons\">\r\n    <button mat-raised-button (click)=\"onNoClick()\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!listName.value\" [mat-dialog-close]=\"listName.value\" cdkFocusInitial>Create</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found-container',\r\n  templateUrl: './page-not-found-container.component.html',\r\n  styleUrls: ['./page-not-found-container.component.css']\r\n})\r\nexport class PageNotFoundContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <img src=\"../../../../assets/images/404_page_not_found.jpg\">\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport Amplify, { Auth, Cache } from 'aws-amplify';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(private router: Router, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  async confirmSignUp(form: NgForm) {\n    const code = form.value.confirmCode;\n\n    await Auth.confirmSignUp(localStorage.getItem('emailID'), code).then((data) => {\n      localStorage.removeItem('emailID');\n      this.router.navigate(['login']);\n      this.openSnackBar('Confirmation Successful ! Please login using your email and password', 'Dismiss');\n    }).catch((err) => {\n      this.openSnackBar(err.message, 'Dismiss');\n    });\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n\n}\n","<div class=\"login-page\">\n    <img src=\"../../assets/images/tasker_logo_new.png\" class=\"tasker-logo\">\n    <mat-card class=\"mat-elevation-z12\">\n        <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n            <mat-tab label=\"Confrimation\">\n                <mat-card-content>\n                    <form (submit)=\"confirmSignUp(confirmForm)\" #confirmForm=\"ngForm\">\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Confrimation Code\" required name=\"confirmCode\" ngModel #confirmCode=\"ngModel\">\n                            <mat-error *ngIf=\"confirmCode.invalid\">Confirmation code is required</mat-error>\n                            <mat-icon matSuffix>vpn_key</mat-icon>\n                        </mat-form-field>\n                        <button mat-raised-button color=\"primary\" class=\"login-button\">Confrim</button>\n                    </form>\n                </mat-card-content>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmGuard implements CanActivate {\n  constructor(private router: Router){}\n  \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if(localStorage.getItem('emailID')){\n      return true;\n    }else{\n      this.router.navigate(['login']);\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SpinnerServiceService } from 'src/app/services/spinner-service/spinner-service.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthServiceService } from '../../services/auth-service/auth-service.service';\r\n\r\n/** Pass untouched request through to the next request handler */\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public _spinner: SpinnerServiceService, public authService: AuthServiceService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const authtoken = localStorage.getItem('idToken');\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${authtoken}`,\r\n      },   \r\n    });\r\n\r\n    this._spinner.show();\r\n\r\n    return next.handle(req).pipe(finalize(() => this._spinner.hide()));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Task } from '../../models/task-model/task.model';\r\nimport { HttpServiceService } from '../http-service/http-service.service';\r\nimport { AuthServiceService } from '../auth-service/auth-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TaskServiceService {\r\n  user: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public httpService: HttpServiceService,\r\n    public authService: AuthServiceService\r\n  ) {\r\n    this.user = localStorage.getItem('userID');\r\n  }\r\n\r\n  getTaskList(ListID: string) {\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'task');\r\n    params = params.append('listId', ListID);\r\n\r\n    return this.http.get<Task[]>(environment.api_endpoint, { params: params });\r\n  }\r\n\r\n  getAllTasks() {\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'task');\r\n\r\n    return this.http.get<Task[]>(environment.api_endpoint, { params: params });\r\n  }\r\n\r\n  //Adding a tasks\r\n  addTask(todo: string, selectedListId: string) {\r\n    console.log(this.user);\r\n\r\n    const task: Task = {\r\n      ItemType: 'TASK',\r\n      ItemID: '',\r\n      ListID: selectedListId,\r\n      TaskTitle: todo,\r\n      TaskDescription: '',\r\n      TaskStatus: 'Ready',\r\n      TaskDueDT: moment(),\r\n      TaskPriority: 'Medium',\r\n      isComplete: false,\r\n      isArchived: false,\r\n      CreatedOn: moment(),\r\n      CreatedBy: this.user,\r\n      UpdatedOn: moment(),\r\n      UpdatedBy: this.user\r\n    };\r\n\r\n    return this.http.post<Task[]>(environment.api_endpoint, JSON.stringify(task));\r\n  }\r\n\r\n  //Delete a task\r\n  deleteTask(task: Task) {\r\n    let params = new HttpParams();\r\n    params = params.append('itemType', 'task');\r\n    params = params.append('itemId', task.ItemID);\r\n    params = params.append('listId', task.ListID);\r\n\r\n    return this.http.delete<Task[]>(environment.api_endpoint, { params: params });\r\n  }\r\n\r\n  //Edit a task\r\n  editTask(task: Task): Observable<Task> {\r\n    return this.http.put<Task>(environment.api_endpoint, JSON.stringify(task));\r\n  }\r\n\r\n  updateTask(taskList: Task[], task: Task, response: any): Task[] {\r\n    taskList = taskList.map((item) => {\r\n      if (task.ItemID == item.ItemID) {\r\n        return {\r\n          ...item,\r\n          ...response,\r\n        };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    return taskList;\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ListServiceService } from 'src/app/services/list-service/list-service.service';\r\nimport { List } from 'src/app/models/list-model/list.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-task-edit-dialog',\r\n  templateUrl: './task-edit-dialog.component.html',\r\n  styleUrls: ['./task-edit-dialog.component.css']\r\n})\r\nexport class TaskEditDialogComponent implements OnInit {\r\n  listMenu: List[] = [];\r\n  displayList: List[] = [];\r\n\r\n  constructor(public dialogRef: MatDialogRef<TaskEditDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any, public listService: ListServiceService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    setTimeout(() => {\r\n      this.listService.getlist().subscribe((response: List[]) => {\r\n        this.listMenu = response;\r\n        this.displayList = this.listMenu.filter((list) => list.ItemID != this.data.ListID).sort((a,b) => {\r\n          return moment(a.CreatedOn).diff(b.CreatedOn);\r\n        });;\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Edit Task</h1>\r\n<div mat-dialog-content>\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Task</mat-label>\r\n        <input maxlength=\"100\" matInput [(ngModel)]=\"data.TaskTitle\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Description</mat-label>\r\n        <textarea matInput [(ngModel)]=\"data.TaskDescription\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"data.taskComplete == true\" class=\"alert alert-info\" role=\"alert\">\r\n        Cannot edit status when task is complete\r\n    </div>\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Status</mat-label>\r\n        <mat-select [(value)]=\"data.TaskStatus\" [disabled]=\"data.isComplete == true\">\r\n            <mat-option value=\"Ready\">\r\n                <div class=\"option\">Ready<span class=\"ready-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"In Progress\">\r\n                <div class=\"option\">In Progress<span class=\"wip-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"Done\">\r\n                <div class=\"option\">Done<span class=\"done-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"Stuck\">\r\n                <div class=\"option\">Stuck<span class=\"stuck-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"Hold\">\r\n                <div class=\"option\">On Hold<span class=\"onHold-dot\"></span></div>\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field color=\"accent\" appearance=\"outline\">\r\n        <mat-label>Due Date</mat-label>\r\n        <input matInput [matDatepicker]=\"duedatepicker\" [(ngModel)]=\"data.TaskDueDT\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"duedatepicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #duedatepicker color=\"primary\"></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Priority</mat-label>\r\n        <mat-select [(value)]=\"data.TaskPriority\">\r\n            <mat-option value=\"Low\">\r\n                <div class=\"option\">Low<span class=\"low-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"Medium\">\r\n                <div class=\"option\">Meduim<span class=\"medium-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"High\">\r\n                <div class=\"option\">High<span class=\"high-dot\"></span></div>\r\n            </mat-option>\r\n            <mat-option value=\"Critical\">\r\n                <div class=\"option\">Critical<span class=\"critical-dot\"></span></div>\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field *ngIf=\"listMenu.length > 1\" appearance=\"outline\">\r\n        <mat-label>List</mat-label>\r\n        <mat-select [(value)]=\"data.ItemID\">\r\n            <mat-option *ngFor=\"let list of displayList\" value=\"{{list.ItemID}}\">{{list.ListName}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n\r\n</div>\r\n\r\n<div mat-dialog-actions class=\"action-buttons\">\r\n    <button mat-raised-button (click)=\"onNoClick()\">Cancel</button>\r\n    <button mat-raised-button [mat-dialog-close]=\"data\" cdkFocusInitial color=\"primary\">Save Task</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wrapper-container',\r\n  templateUrl: './wrapper-container.component.html',\r\n  styleUrls: ['./wrapper-container.component.css']\r\n})\r\nexport class WrapperContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-task-creat></app-task-creat>\r\n<app-task-list></app-task-list>","import { Component, OnInit } from '@angular/core';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@Component({\r\n  selector: 'app-empty-container',\r\n  templateUrl: './empty-container.component.html',\r\n  styleUrls: ['./empty-container.component.css']\r\n})\r\nexport class EmptyContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <img src=\"../../../../assets/images/welcome_cats.svg\">\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { TaskServiceService } from './../../../services/task-service/task-service.service';\r\nimport { ActivatedRoute} from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-creat',\r\n  templateUrl: './task-creat.component.html',\r\n  styleUrls: ['./task-creat.component.css']\r\n})\r\nexport class TaskCreatComponent implements OnInit, OnDestroy {\r\n\r\n  routeSub: Subscription;\r\n  selectedListId: string;\r\n\r\n  constructor(public taskService: TaskServiceService,  private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.routeSub = this.route.paramMap.subscribe(params => {\r\n      this.selectedListId = params.get('id');\r\n    });\r\n  }\r\n\r\n  onSubmit(form: NgForm){\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n\r\n    //this.taskService.addTask(form.value.taskInputField, this.selectedListId);\r\n    form.resetForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routeSub.unsubscribe()\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <form (submit)=\"onSubmit(taskForm)\" #taskForm=\"ngForm\">\r\n        <div class=\"form-row align-items-center\">\r\n            <div class=\"col-xs-12 col-lg-11\">\r\n                <input type=\"text\" maxlength=\"100\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Whats up ?\" ngModel name=\"taskInputField\" #taskField=\"ngModel\" required>\r\n            </div>\r\n            <div class=\"col-xs-12 col-lg-1\">\r\n                <button mat-raised-button color=\"primary\" class=\"btn btn-primary mb-2\">Add Task</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageNotFoundContainerComponent } from './components/main-container/page-not-found-container/page-not-found-container.component';\r\nimport { TaskListResolverService } from './resolvers/task-list-resolver/task-list-resolver.service';\r\nimport { ReportDashboardComponent } from './components/main-container/report-dashboard/report-dashboard.component';\r\nimport { ListMenuComponent } from './components/sidebar/list-menu/list-menu/list-menu.component';\r\nimport { ListMenuResolverService } from './resolvers/list-menu-resolver/list-menu-resolver.service';\r\nimport { TaskListComponent } from './components/main-container/task-list/task-list.component';\r\nimport { ReportResolverService } from './resolvers/report-resolver/report-resolver.service';\r\nimport { ArchiveListComponent } from './components/main-container/archive-list/archive-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeadnavSidenavComponent } from './navigation/headnav-sidenav/headnav-sidenav.component';\r\nimport { ConfirmComponent } from './confirm/confirm.component';\r\nimport { AuthGuard } from './guards/authguard/auth.guard';\r\nimport { ConfirmGuard } from './guards/confirmguard/confirm.guard';\r\n\r\n// const routes: Routes = [\r\n//   {   path: '', component: ReportDashboardComponent, resolve: {task: ReportResolverService } },\r\n//   { path: '', component: ListMenuComponent, outlet: 'app-list-menu', resolve: {list: ListMenuResolverService }},\r\n//   { path: 'list/:id', component: TaskListComponent},\r\n//   { path: 'archive', component: ArchiveListComponent, resolve: {archivedtask: TaskListResolverService }},\r\n//   { path: '**', component: PageNotFoundContainerComponent },  // Wildcard route for a 404 page\r\n// ];\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'confirm', component: ConfirmComponent, canActivate: [ConfirmGuard] },\r\n  { \r\n    path: '', \r\n    component: HeadnavSidenavComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ListMenuComponent, outlet: 'app-list-menu',  resolve: {list: ListMenuResolverService }},\r\n      { path: '', component: ReportDashboardComponent, resolve: {task: ReportResolverService }},\r\n      { path: 'list/:id', component: TaskListComponent },\r\n      {path: 'archive', component: ArchiveListComponent, canActivate: [AuthGuard], resolve: {archivedtask: TaskListResolverService }}\r\n    ]\r\n  },\r\n  { path: '**', canActivate: [AuthGuard], component: PageNotFoundContainerComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthServiceService } from '../services/auth-service/auth-service.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport Amplify, { Auth, Cache } from 'aws-amplify';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public auth: AuthServiceService, private _snackBar: MatSnackBar, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  onSignIn(form: NgForm) {\r\n    this.auth.authenticateUser(form.value.email, form.value.password).then((user) => {\r\n      this.router.navigate(['']);\r\n      localStorage.setItem('userID', user['username']);\r\n      localStorage.setItem('idToken',user['signInUserSession']['idToken']['jwtToken']);\r\n    }).catch((err) => {\r\n      form.resetForm();\r\n      if(err.message == 'User is not confirmed.'){\r\n        this.router.navigate(['confirm']);\r\n        this.openSnackBar('Enter confirmation code', 'Dismiss');\r\n      }else{\r\n        this.openSnackBar(err.message, 'Dismiss');\r\n      }\r\n    });\r\n  }\r\n\r\n  async onSignUp(form: NgForm) {\r\n    const username = form.value.email;\r\n    const password = form.value.password;\r\n    const repassword = form.value.repassword;\r\n\r\n    let re = /\\S+@\\S+\\.\\S+/;\r\n\r\n    if (password != repassword) {\r\n      this.openSnackBar('Passwords do not match', 'Dismiss');\r\n    }\r\n    else if (!re.test(username)) {\r\n      this.openSnackBar('Enter valid email', 'Dismiss');\r\n    } else {\r\n      try {\r\n        const { user } = await Auth.signUp({\r\n          username,\r\n          password,\r\n        });\r\n        localStorage.setItem('emailID', username);\r\n        this.router.navigate(['confirm']);\r\n        this.openSnackBar('Enter confirmation code', 'Dismiss');\r\n      } catch (error) {\r\n        console.log('error signing up:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"login-page\">\r\n    <img src=\"../../assets/images/tasker_logo_new.png\" class=\"tasker-logo\">\r\n    <mat-card class=\"mat-elevation-z12\">\r\n        <!-- <mat-card-title style=\"text-align:center;\">Tasker</mat-card-title> -->\r\n        <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\r\n            <mat-tab label=\"Sign In\">\r\n                <mat-card-content>\r\n                    <form (submit)=\"onSignIn(signInForm)\" #signInForm=\"ngForm\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <input matInput placeholder=\"Email\" required name=\"email\" ngModel #email=\"ngModel\">\r\n                            <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\r\n                            <mat-icon matSuffix>email</mat-icon>\r\n                        </mat-form-field>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <input matInput placeholder=\"Password\" type=\"password\" required minlength=\"6\" name=\"password\" ngModel #password=\"ngModel\">\r\n                            <mat-error *ngIf=\"password.errors && password.errors.required\">Password is required</mat-error>\r\n                            <mat-error *ngIf=\"password.errors && password.errors.minlength\">Password must be of length 6</mat-error>\r\n                            <mat-icon matSuffix>lock</mat-icon>\r\n                        </mat-form-field>\r\n                        <button mat-raised-button color=\"primary\" class=\"login-button\">Sign In</button>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-tab>\r\n            <mat-tab label=\"Sign Up\">\r\n                <mat-card-content>\r\n                    <form (submit)=\"onSignUp(signUpForm)\" #signUpForm=\"ngForm\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <input matInput type=\"email\" placeholder=\"Ex. pat@example.com\" required name=\"email\" ngModel #email=\"ngModel\">\r\n                            <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\r\n                            <mat-icon matSuffix>email</mat-icon>\r\n                        </mat-form-field>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <input matInput placeholder=\"Password\" type=\"password\" required minlength=\"6\" name=\"password\" ngModel #password=\"ngModel\">\r\n                            <mat-error *ngIf=\"password.errors && password.errors.required\">Password is required</mat-error>\r\n                            <mat-error *ngIf=\"password.errors && password.errors.minlength\">Password must be of length 6</mat-error>\r\n                            <mat-icon matSuffix>lock</mat-icon>\r\n                        </mat-form-field>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <input matInput placeholder=\"Password\" type=\"password\" required minlength=\"6\" name=\"repassword\" ngModel #repassword=\"ngModel\">\r\n                            <mat-error *ngIf=\"repassword.errors && repassword.errors.required\">Re-Enter Password is required</mat-error>\r\n                            <mat-icon matSuffix>lock</mat-icon>\r\n                        </mat-form-field>\r\n                        <button mat-raised-button color=\"primary\" class=\"login-button\">Sign Up</button>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </mat-card>\r\n</div>","import { Component, OnInit, Inject  } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-confirmation-dialog',\r\n  templateUrl: './delete-confirmation-dialog.component.html',\r\n  styleUrls: ['./delete-confirmation-dialog.component.css']\r\n})\r\nexport class DeleteConfirmationDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteConfirmationDialogComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Delete Confirmation</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <h3 *ngIf=\"data.element == 'task'\">Are you sure you want to delete this task ?</h3>\r\n    <h3 *ngIf=\"data.element == 'list'\">Are you sure you want to delete <strong>{{data.ListName}}</strong> list ? </h3>\r\n    <!-- <p *ngIf=\"data.element == 'list'\">Carefull !! Deleting this list will delete all tasks in this list</p> -->\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n    <button mat-raised-button mat-dialog-close>Cancel</button>\r\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">Delete</button>\r\n</mat-dialog-actions>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}