{"version":3,"sources":["./src/app/components/sidebar/list-menu/list-menu/list-menu.component.ts","./src/app/components/sidebar/list-menu/list-menu/list-menu.component.html","./src/environments/environment.ts","./src/app/components/main-container/task-list/task-list.component.ts","./src/app/components/main-container/task-list/task-list.component.html","./src/app/components/sidebar/create-list/create-list-button/create-list-button.component.ts","./src/app/components/sidebar/create-list/create-list-button/create-list-button.component.html","./src/app/dialog/task-delete-dialog/task-delete-dialog.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/navigation/headnav-sidenav/headnav-sidenav.component.ts","./src/app/navigation/headnav-sidenav/headnav-sidenav.component.html","./src/app/app.module.ts","./src/app/Services/list-service/list-service.service.ts","./src/app/models/list-model/list.model.ts","./src/app/dialog/list-create-dialog/list-create-dialog.component.ts","./src/app/dialog/list-create-dialog/list-create-dialog.component.html","./src/app/services/task-service/task-service.service.ts","./src/app/components/main-container/wrapper-container/wrapper-container.component.ts","./src/app/components/main-container/wrapper-container/wrapper-container.component.html","./src/app/components/main-container/empty-container/empty-container.component.ts","./src/app/components/main-container/empty-container/empty-container.component.html","./src/app/components/main-container/task-creat/task-creat.component.ts","./src/app/components/main-container/task-creat/task-creat.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACS;;;;;;;;ICAlE,yEAAgG;IAAA,uDAAiB;IAAA,4DAAM;;;IAAhE,yJAAgC;IAAS,0DAAiB;IAAjB,iFAAiB;;ADU9G,MAAM,iBAAiB;IAK5B,YAAmB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAHlD,aAAQ,GAAW,EAAE,CAAC,CAAC,qCAAqC;IAGN,CAAC;IAEvD,yDAAyD;IACzD,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,kFAAkF;IAClF,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,YAAoB,EAAE,EAAE;YACzF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAuC;IACvC,IAAI,CAAC,KAA4B;QAC/B,8EAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC1E,CAAC;IAED,2DAA2D;IAC3D,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;;kFA3BU,iBAAiB;iGAAjB,iBAAiB;QCX9B,yEACI;QADkC,sKAAsB,gBAAY,IAAC;QACrE,6GAAgG;QACpG,4DAAM;;QADuB,0DAA6B;QAA7B,iFAA6B;;6FDU7C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACS;;;;;;;ICEhE,qEAAkE;;;IAMhE,2EAAiG;IAAA,8DAAG;IAAA,4DAAO;;;IAC3G,2EAC2C;IAAA,iEAAM;IAAA,4DAAO;;;IACxD,2EAAmG;IAAA,+DAAI;IAAA,4DAAO;;;IAC9G,2EAC6C;IAAA,mEAAQ;IAAA,4DAAO;;;IAK5D,2EAAoG;IAAA,gEAAK;IAAA,4DAAO;;;IAChH,2EAAgG;IAAA,2EACtF;IAAA,4DAAO;;;IACjB,2EAAkG;IAAA,+DAAI;IAAA,4DAAO;;;IAC7G,2EAAoG;IAAA,gEAAK;IAAA,4DAAO;;;IAChH,2EAAkG;IAAA,+DAAI;IAAA,4DAAO;;;;;IAtBjH,yEACE;IAAA,mHAA4D;IAC5D,yEACE;IAAA,0EAA8B;IAAA,yEAAc;IAAA,4DAAO;IACnD,uDACF;IAAA,4DAAM;IACN,yEACE;IAAA,qHAAiG;IACjG,qHAC2C;IAC3C,sHAAmG;IACnG,wHAC6C;IAE7C,4EACkB;IAAA,wDAA+H;IAAA,4DAAO;IAExJ,wHAAoG;IACpG,wHAAgG;IAEhG,wHAAkG;IAClG,wHAAoG;IACpG,wHAAkG;IAGlG,4EAAkF;IAA9B,iWAA6B;IAAC,gEAAI;IAAA,4DAAO;IAC7F,4EAAuE;IAAnC,sWAAkC;IAAC,kEAAM;IAAA,4DAAO;IACtF,4DAAM;IACR,4DAAM;;;IAxBF,0DACF;IADE,wFACF;IAEQ,0DAA8B;IAA9B,2FAA8B;IAC9B,0DAAiC;IAAjC,8FAAiC;IAEjC,0DAA+B;IAA/B,4FAA+B;IAC/B,0DAAmC;IAAnC,gGAAmC;IAIvB,0DAA+H;IAA/H,2PAA+H;IAE3I,0DAA8B;IAA9B,2FAA8B;IAC9B,0DAA4B;IAA5B,yFAA4B;IAE5B,0DAA6B;IAA7B,0FAA6B;IAC7B,0DAA8B;IAA9B,2FAA8B;IAC9B,0DAA6B;IAA7B,0FAA6B;;ADTpC,MAAM,iBAAiB;IAM5B,YAAmB,WAA+B,EAAU,KAAqB;QAA9D,gBAAW,GAAX,WAAW,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAJjF,aAAQ,GAAW,EAAE,CAAC,CAAC,qCAAqC;IAIyB,CAAC;IAEtF,yDAAyD;IACzD,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,cAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACjF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE;gBAClC,OAAO,EAAE,CAAC,MAAM,IAAI,cAAc,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;IAuBA;IACA,2DAA2D;IAC3D,WAAW;IACX,CAAC;IAED,uCAAuC;IACvC,IAAI,CAAC,KAA4B;QAC/B,8EAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC1E,CAAC;;kFAvDU,iBAAiB;iGAAjB,iBAAiB;QCf9B,yEACE;QAAA,yEACE;QADoC,sKAAsB,gBAAY,IAAC;QACvE,+GACE;QA4BJ,4DAAM;QACR,4DAAM;;QA9BuB,0DAA6B;QAA7B,iFAA6B;;6FDa7C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE6D;;;;;;AAQxG,MAAM,yBAAyB;IAIpC,YAAmB,MAAiB,EAAS,WAA+B;QAAzD,WAAM,GAAN,MAAM,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAEjF,QAAQ;IACR,CAAC;IAED,oBAAoB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAyB,EAAE;YAC5D,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,OAAO,MAAM,IAAI,SAAS,EAAE;gBAC9B,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;iBAC3C;aACF;QACH,CAAC,CAAC;IACJ,CAAC;;kGAxBU,yBAAyB;yGAAzB,yBAAyB;QCVtC,4EAA2E;QAAjC,iJAAS,0BAAsB,IAAC;QAAC,0EAAe;QAAA,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAAA,4DAAS;;6FDU9G,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2D;AACuB;;;AAO3E,MAAM,yBAAyB;IAEpC,YAAmB,SAAkD,EAAiC,IAAS;QAA5F,cAAS,GAAT,SAAS,CAAyC;QAAiC,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAEpH,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;kGATU,yBAAyB,0MAE0C,wEAAe;yGAFlF,yBAAyB;6FAAzB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAGwE,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;ACV/F;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,iFAA2C;;6FDO9B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC4B;AAEpB;;;;;;;;;;;;;;ICD9C,4EAEE;IAFgE,mWAAS,YAAe,IAAC;IAEzF,8EAA4C;IAAA,+DAAI;IAAA,4DAAW;IAC7D,4DAAS;;ADKN,MAAM,uBAAuB;IAQlC,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAN1D,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAC7B,kEAAW,EAAE,CACd,CAAC;IAEyD,CAAC;;8FARnD,uBAAuB;uGAAvB,uBAAuB;QCVpC,yEACE;QAAA,iFACE;QAAA,yHAEE;;QAEF,oEACF;QAAA,4DAAc;QAEd,2FACE;QAAA,oFAEE;;;;QAAA,qFAAiD;QACjD,gFACE;QAAA,4EAA+B;QACjC,4DAAe;QACjB,4DAAc;QACd,uFACE;QAAA,4EAA+B;QAC/B,+EAAgD;QAClD,4DAAsB;QACxB,4DAAwB;QAC1B,4DAAM;;QAnBA,0DAA0B;QAA1B,iJAA0B;QAQ1B,0DAA+C;QAA/C,mKAA+C;QADZ,4KAA4D;;6FDAxF,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgC;AACkB;AAC9C;AACU;AACF;AACE;AACN;AACA;AACsE;AAC5B;AAC3C;AACG;AAC4C;AACxD;AACY;AACwC;AACnC;AACgC;AACkB;AAC3D;AACiE;AACjB;;AAoC9F,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAjBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,gEAAY;YACZ,0EAAgB;YAChB,wEAAe;YACf,0EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,sEAAc;YACd,yEAAe;YACf,2DAAW;YACX,uEAAc;YACd,8EAAiB;YACjB,qEAAa;SACd;mIAIU,SAAS,mBA/BlB,2DAAY;QACZ,6GAAuB;QACvB,0IAAyB;QACzB,8GAAiB;QACjB,kHAAyB;QACzB,8GAAkB;QAClB,2GAAiB;QACjB,6HAAuB;QACvB,mIAAyB;QACzB,kHAAyB,aAGzB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,gEAAY;QACZ,0EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,sEAAc;QACd,yEAAe;QACf,2DAAW;QACX,uEAAc;QACd,8EAAiB;QACjB,qEAAa;6FAKJ,SAAS;cAjCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6GAAuB;oBACvB,0IAAyB;oBACzB,8GAAiB;oBACjB,kHAAyB;oBACzB,8GAAkB;oBAClB,2GAAiB;oBACjB,6HAAuB;oBACvB,mIAAyB;oBACzB,kHAAyB;iBAC1B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,gEAAY;oBACZ,0EAAgB;oBAChB,wEAAe;oBACf,0EAAgB;oBAChB,qEAAa;oBACb,qEAAa;oBACb,sEAAc;oBACd,yEAAe;oBACf,2DAAW;oBACX,uEAAc;oBACd,8EAAiB;oBACjB,qEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACJ;;;AAOhC,MAAM,kBAAkB;IAG7B,YAAoB,MAAc,EAAU,KAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAFzD,YAAO,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;IAEmB,CAAC;IAEtE,iBAAiB;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,uBAAuB;QAC5D,MAAM,IAAI,GAAS;YACjB,EAAE,EAAC,MAAM;YACT,QAAQ,EAAC,WAAW;SACrB;QACD,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1C,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAC1C,CAAC;;oFAnBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,IAAI;CAGhB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACwB;;;;;;;;AAQ3E,MAAM,yBAAyB;IAEpC,YAAoB,SAAkD,EACpC,IAAU;QADxB,cAAS,GAAT,SAAS,CAAyC;QACpC,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;kGAVU,yBAAyB,0MAG1B,wEAAe;yGAHd,yBAAyB;QCTtC,wEAAqB;QAAA,8FAAmC;QAAA,4DAAK;QAC7D,yEACE;QAAA,oFACE;QAAA,2EACF;QADkC,oMAA2B;QAA3D,4DACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,yEACE;QAAA,4EAAgD;QAAtB,iJAAS,eAAW,IAAC;QAAC,iEAAM;QAAA,4DAAS;QAC/D,4EAA6F;QAAA,6DAAE;QAAA,4DAAS;QAC1G,4DAAM;;QAN8B,0DAA2B;QAA3B,sFAA2B;QAKnB,0DAAkC;QAAlC,+FAAkC;;6FDCjE,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAII,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEZ3B;AAAA;AAAA;AAAA;AAA2C;AACJ;;AAOhC,MAAM,kBAAkB;IAI7B;QAFQ,iBAAY,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;IAEvC,CAAC;IAEjB,mCAAmC;IACnC,oBAAoB;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED,eAAe;IACf,OAAO,CAAC,IAAY,EAAC,cAAsB;QACzC,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAChC,MAAM,IAAI,GAAS;YACjB,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,cAAc;YACtB,IAAI,EAAE,IAAI;YACV,WAAW,EAAC,EAAE;YACd,MAAM,EAAC,OAAO;YACd,QAAQ,EAAC,QAAQ;YACjB,OAAO,EAAC,IAAI,IAAI,EAAE;SACnB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/C,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,eAAe;IACf,UAAU,CAAC,MAAc;QACvB,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/C,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;;oFAlCU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,yBAAyB;IAEpC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kGALU,yBAAyB;yGAAzB,yBAAyB;QCPtC,4EAAiC;QACjC,2EAA+B;;6FDMlB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCRpC,2EACI;QAAA,oEACJ;QAAA,4DAAW;;6FDME,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,kBAAkB;IAI7B,YAAmB,WAA+B,EAAW,KAAqB;QAA/D,gBAAW,GAAX,WAAW,CAAoB;QAAW,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACzE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;;oFAnBU,kBAAkB;kGAAlB,kBAAkB;;QCV/B,yEACI;QAAA,6EACI;QADE,sRAAU,iBAAkB,IAAC;QAC/B,yEACI;QAAA,yEACI;QAAA,yEAEJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAAuE;QAAA,mEAAQ;QAAA,4DAAS;QAC5F,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;;6FDFO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC+D;AACN;;;AAEhH,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAG,4HAAuB,EAAE;IACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAC,kIAAyB,EAAE;CAC1D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { List } from '../../../../models/list-model/list.model'\nimport { Subscription } from 'rxjs';\nimport { ListServiceService } from 'src/app/Services/list-service/list-service.service';\n\n@Component({\n  selector: 'app-list-menu',\n  templateUrl: './list-menu.component.html',\n  styleUrls: ['./list-menu.component.css']\n})\nexport class ListMenuComponent implements OnInit {\n\n  listMenu: List[] = []; //Local array to store the list items\n  private listItemSub: Subscription; //Create a subscription to listen to changes in array\n\n  constructor(public listService: ListServiceService) { }\n\n  //Function to get any items when the component is created\n  ngOnInit(): void {\n    this.getListItems();\n  }\n\n  //Get the list elements, the subscription is used to listen to any change of array\n  getListItems(): void {\n    this.listItemSub = this.listService.getNewListListner().subscribe((returnedList: List[]) => {\n      this.listMenu = returnedList;\n    });\n  }\n\n  //Logic for drag and drop of list items\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.listMenu, event.previousIndex, event.currentIndex);\n  }\n\n  //Destroy the subscription after the component is destroyed\n  ngOnDestroy(): void {\n    this.listItemSub.unsubscribe();\n  }\n\n}\n","<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div class=\"example-box\" *ngFor=\"let list of listMenu\" [routerLink]=\"['/list',list.id]\" cdkDrag>{{list.listName}}</div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Task } from '../../../models/task-model/task.model';\nimport { Subscription } from 'rxjs';\nimport { TaskServiceService } from '../../../services/task-service/task-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskDeleteDialogComponent } from 'src/app/dialog/task-delete-dialog/task-delete-dialog.component';\n\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit, OnDestroy {\n\n  taskList: Task[] = []; //Local array to store the list items\n  private taskSub: Subscription; //Create a subscription to listen to changes in array\n  selectedListId: number;\n\n  constructor(public taskService: TaskServiceService, private route: ActivatedRoute) { }\n\n  //Function to get any items when the component is created\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.selectedListId = Number(params.get('id'));\n      this.getTaskList(this.selectedListId);\n    });\n  }\n\n  getTaskList(selectedListId: number): void {\n    this.taskSub = this.taskService.getTaskUpdateListner().subscribe((tasks: Task[]) => {\n      this.taskList = tasks.filter((el) => {\n        return el.listId == selectedListId;\n      });\n    });\n  }\n\n  /*\n  //Delete Modal\n  openDeleteModal(taskId: number): void {\n    const dialogRef = this.dialog.open(TaskDeleteDialogComponent, {\n      width: '250px',\n      data: {\n        element: 'task'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == true) {\n        this.taskService.deleteTask(taskId);\n        this.openSnackBar();\n      }\n    });\n  }\n\n  openSnackBar(): void {\n    this._snackBar.open('Task Deleted', 'Dismiss', {\n      duration: 2000,\n    });\n  }\n*/\n  //Destroy the subscription after the component is destroyed\n  ngOnDestroy(): void {\n  }\n\n  //Logic for drag and drop of task items\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.taskList, event.previousIndex, event.currentIndex);\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div class=\"example-box\" *ngFor=\"let task of taskList\" cdkDrag>\r\n      <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\r\n      <div class=\"taskText\">\r\n        <span class=\"material-icons \">drag_indicator</span>\r\n        {{task.todo}}\r\n      </div>\r\n      <div class=\"taskOptionList\">\r\n        <span *ngIf=\"task.priority == 'Low'\" matTooltip=\"Priority\" class=\"badge badge-pill low-priority\">Low</span>\r\n        <span *ngIf=\"task.priority == 'Medium'\" matTooltip=\"Priority\"\r\n          class=\"badge badge-pill medium-priority\">Medium</span>\r\n        <span *ngIf=\"task.priority == 'High'\" matTooltip=\"Priority\" class=\"badge badge-pill high-priority\">High</span>\r\n        <span *ngIf=\"task.priority == 'Critical'\" matTooltip=\"Priority\"\r\n          class=\"badge badge-pill critical-priority\">Critical</span>\r\n\r\n        <span matTooltip=\"Due Date\"\r\n          class=\"dueDate\">{{task.dueDate.toLocaleString('default', {month: 'long'}) + ' ' + task.dueDate.getDate() + ', ' + task.dueDate.getFullYear() }}</span>\r\n\r\n        <span *ngIf=\"task.status == 'Draft'\" matTooltip=\"Status\" class=\"badge badge-secondary draft-status\">Draft</span>\r\n        <span *ngIf=\"task.status == 'Wip'\" matTooltip=\"Status\" class=\"badge badge-secondary wip-status\">Work in\r\n          Progress</span>\r\n        <span *ngIf=\"task.status == 'Done'\" matTooltip=\"Status\" class=\"badge badge-secondary done-status\">Done</span>\r\n        <span *ngIf=\"task.status == 'Stuck'\" matTooltip=\"Status\" class=\"badge badge-secondary stuck-status\">Stuck</span>\r\n        <span *ngIf=\"task.status == 'Hold'\" matTooltip=\"Status\" class=\"badge badge-secondary hold-status\">Hold</span>\r\n\r\n\r\n        <span matTooltip=\"Edit\" class=\"material-icons edit\" (click)=\"openEditModal(task)\">edit</span>\r\n        <span class=\"material-icons delete\" (click)=\"openDeleteModal(task.id)\">delete</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ListCreateDialogComponent } from '../../../../dialog/list-create-dialog/list-create-dialog.component';\nimport { ListServiceService } from 'src/app/Services/list-service/list-service.service';\n\n@Component({\n  selector: 'app-create-list-button',\n  templateUrl: './create-list-button.component.html',\n  styleUrls: ['./create-list-button.component.css']\n})\nexport class CreateListButtonComponent implements OnInit {\n\n  listName: string;\n\n  constructor(public dialog: MatDialog, public listService: ListServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  openCreateListDialog(): void {\n    const dialogRef = this.dialog.open(ListCreateDialogComponent, {\n      width: '250',\n      data: {\n        listName: this.listName\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (typeof result != undefined) {\n        if (result.trim().length > 0) {\n          this.listService.addNewListToMenu(result);\n        }\n      }\n    })\n  }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"openCreateListDialog()\">Create New List<mat-icon>add</mat-icon></button>\n","import { Component, OnInit, Inject  } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-task-delete-dialog',\n  templateUrl: './task-delete-dialog.component.html',\n  styleUrls: ['./task-delete-dialog.component.css']\n})\nexport class TaskDeleteDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<TaskDeleteDialogComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tasker-front-end';\n}\n","<app-headnav-sidenav></app-headnav-sidenav>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-headnav-sidenav',\n  templateUrl: './headnav-sidenav.component.html',\n  styleUrls: ['./headnav-sidenav.component.css']\n})\nexport class HeadnavSidenavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<div class=\"example-container\">\n  <mat-toolbar color=\"primary\">\n    <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n      *ngIf=\"isHandset$ | async\">\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n    </button>\n    <img src=\"../../../assets/images/tasker_logo_new.png\" width=\"140\" height=\"140\">\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n      <app-create-list-button></app-create-list-button>\n      <mat-nav-list>\n        <app-list-menu></app-list-menu>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <router-outlet></router-outlet>\n      <router-outlet name=\"secondary\"></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeadnavSidenavComponent } from './navigation/headnav-sidenav/headnav-sidenav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { CreateListButtonComponent } from './components/sidebar/create-list/create-list-button/create-list-button.component';\r\nimport { ListMenuComponent } from './components/sidebar/list-menu/list-menu/list-menu.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { ListCreateDialogComponent } from './dialog/list-create-dialog/list-create-dialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TaskCreatComponent } from './components/main-container/task-creat/task-creat.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { TaskListComponent } from './components/main-container/task-list/task-list.component';\r\nimport { EmptyContainerComponent } from './components/main-container/empty-container/empty-container.component';\r\nimport {MatCardModule} from '@angular/material/card';\nimport { WrapperContainerComponent } from './components/main-container/wrapper-container/wrapper-container.component';\nimport { TaskDeleteDialogComponent } from './dialog/task-delete-dialog/task-delete-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeadnavSidenavComponent,\r\n    CreateListButtonComponent,\r\n    ListMenuComponent,\r\n    ListCreateDialogComponent,\r\n    TaskCreatComponent,\r\n    TaskListComponent,\r\n    EmptyContainerComponent,\r\n    WrapperContainerComponent,\r\n    TaskDeleteDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    DragDropModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { List } from '../../models/list-model/list.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListServiceService {\n  private newList = new BehaviorSubject<List[]>([]);\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n  \n  getNewListListner(){\n    return this.newList.asObservable();\n  }\n\n  addNewListToMenu(newListName: string){\n    const listID = new Date().valueOf(); //Using timestamp as ID\n    const list: List = {\n      id:listID,\n      listName:newListName\n    }\n    let newListMenu = [...this.newList.value];\n    newListMenu.push(list);\n    this.newList.next(newListMenu);\n    this.router.navigate(['/list', listID]);\n  }\n\n}\n","export class List {\n    id: number;\n    listName: string;\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { List } from '../../models/list-model/list.model';\n\n@Component({\n  selector: 'app-list-create-dialog',\n  templateUrl: './list-create-dialog.component.html',\n  styleUrls: ['./list-create-dialog.component.css']\n})\nexport class ListCreateDialogComponent implements OnInit {\n\n  constructor( public dialogRef: MatDialogRef<ListCreateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: List) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void{\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>What do you want to call the list ?</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"outline\">\n    <input cdkFocusInitial matInput [(ngModel)]=\"data.listName\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"action-buttons\">\n  <button mat-raised-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data.listName\" cdkFocusInitial>Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Task } from '../../models/task-model/task.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  private updatedTasks = new BehaviorSubject<Task[]>([]);\n\n  constructor() { }\n\n  //Listen to any change in the array\n  getTaskUpdateListner() {\n    return this.updatedTasks.asObservable();\n  }\n\n  //Adding a task\n  addTask(todo: string,selectedListId: number){\n    const id = new Date().valueOf();\n    const task: Task = {\n      id: id,\n      listId: selectedListId,\n      todo: todo,\n      description:'',\n      status:'Draft',\n      priority:'Medium',\n      dueDate:new Date()\n    }\n    console.log(task);\n    let newTaskList = [...this.updatedTasks.value];\n    newTaskList.push(task);\n    this.updatedTasks.next(newTaskList);\n  }\n\n  //Delete a task\n  deleteTask(taskId: number) {\n    let newTaskList = [...this.updatedTasks.value];\n    newTaskList = newTaskList.filter(el => el.id != taskId);\n    this.updatedTasks.next(newTaskList);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wrapper-container',\n  templateUrl: './wrapper-container.component.html',\n  styleUrls: ['./wrapper-container.component.css']\n})\nexport class WrapperContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-task-creat></app-task-creat>\n<app-task-list></app-task-list>","import { Component, OnInit } from '@angular/core';\nimport {MatCardModule} from '@angular/material/card';\n\n@Component({\n  selector: 'app-empty-container',\n  templateUrl: './empty-container.component.html',\n  styleUrls: ['./empty-container.component.css']\n})\nexport class EmptyContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <img src=\"../../../../assets/images/meditation_man.jpg\">\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TaskServiceService } from './../../../services/task-service/task-service.service';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-task-creat',\n  templateUrl: './task-creat.component.html',\n  styleUrls: ['./task-creat.component.css']\n})\nexport class TaskCreatComponent implements OnInit {\n\n  selectedListId: number;\n\n  constructor(public taskService: TaskServiceService,  private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.selectedListId = Number(params.get('id'));\n    });\n  }\n\n  onSubmit(form: NgForm){\n    if(form.invalid){\n      return;\n    }\n\n    this.taskService.addTask(form.value.taskInputField, this.selectedListId);\n    form.resetForm();\n  }\n\n}\n","<div class=\"container-fluid\">\n    <form (submit)=\"onSubmit(taskForm)\" #taskForm=\"ngForm\">\n        <div class=\"form-row align-items-center\">\n            <div class=\"col-xs-12 col-lg-11\">\n                <input type=\"text\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Lets do something great today...\"  ngModel\n                name=\"taskInputField\" #taskField=\"ngModel\" required>\n            </div>\n            <div class=\"col-xs-12 col-lg-1\">\n                <button mat-raised-button color=\"primary\" class=\"btn btn-primary mb-2\">Add Task</button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WrapperContainerComponent } from './components/main-container/wrapper-container/wrapper-container.component';\nimport { EmptyContainerComponent } from './components/main-container/empty-container/empty-container.component';\n\nconst routes: Routes = [\n  { path: '', component:  EmptyContainerComponent },\n  { path: 'list/:id', component:WrapperContainerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}